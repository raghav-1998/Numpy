What is Numpy ??

NumPy is a Python library used for working with arrays.
It also has functions for working in domain of linear algebra, fourier transform, and matrices.

Why Use NumPy?

In Python we have lists that serve the purpose of arrays, but they are slow to process.
NumPy aims to provide an array object that is up to 50x faster than traditional Python lists.
The array object in NumPy is called ndarray, it provides a lot of supporting functions that make working with ndarray very easy.
Arrays are very frequently used in data science, where speed and resources are very important.

Why is NumPy Faster Than Lists?

NumPy arrays are stored at one continuous place in memory unlike lists, so processes can access and manipulate 
them very efficiently.
This behavior is called locality of reference in computer science.
This is the main reason why NumPy is faster than lists. Also it is optimized to work with latest CPU architectures.

Which Language is NumPy written in?

NumPy is a Python library and is written partially in Python, but most of the parts that require fast computation are 
written in C or C++.


Installation of NumPy:

If you have Python and PIP already installed on a system, then install using this command:
pip install numpy


NumPy as np:
NumPy is usually imported under the np alias.

import numpy as np


Create a NumPy ndarray Object:
NumPy is used to work with arrays. The array object in NumPy is called ndarray.

We can create a NumPy ndarray object by using the array() function.

To create an ndarray, we can pass a list, tuple or any array-like object into the array() method, and it will be converted into an ndarray

type(): This built-in Python function tells us the type of the object passed to it. Type of numpy array is "numpy.ndarray"

Dimensions in Arrays:
A dimension in arrays is one level of array depth (nested arrays).

1. 0-D Arrays: 
0-D arrays, or Scalars, are the elements in an array. Each value in an array is a 0-D array.

2. 1-D Arrays:
An array that has 0-D arrays as its elements is called uni-dimensional or 1-D array. These are most common & basic arrays.

3. 2-D Arrays:
An array that has 1-D arrays as its elements is called a 2-D array.These are often used to represent matrix or 2nd order tensors.

4. 3-D arrays:
An array that has 2-D arrays (matrices) as its elements is called 3-D array.These are often used to represent a 3rd order tensor.

Check Number of Dimensions?
NumPy Arrays provides the "ndim" attribute that returns an integer that tells us how many dimensions the array have.

Higher Dimensional Arrays
An array can have any number of dimensions.
When the array is created, you can define the number of dimensions by using the "ndmin" argument.


Note: Demos from Creating Array to Higher Dimensional Arrays are in [Demo1 file](https://github.com/raghav-1998/Numpy/blob/main/Demo1.ipynb).











